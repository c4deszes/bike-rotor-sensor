name: Hardware

on:
  pull_request:
    paths:
      - 'hardware/**'
      - '.github/workflows/hardware*.yml'

jobs:
  ERC:
    name: ERC
    if: false
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad7_auto:1.6.4
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run ERC
      working-directory: hardware
      run: ./scripts/run_erc.sh

  DRC:
    name: DRC
    if: false
    #needs: ERC
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad7_auto:1.6.4
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run DRC
      working-directory: hardware
      run: ./scripts/run_drc.sh

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install requirements
        working-directory: hardware
        run: pip install -r docs/requirements.txt

      - name: Build
        working-directory: hardware
        run: python -m sphinx docs docs/_build

      - name: Archive documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: hardware/docs/_build/
          if-no-files-found: error
          retention-days: 5

  schematic_layout:
    name: Export documentation
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad7_auto:1.6.4
    strategy:
      matrix:
        product:
          - "rotor-sensor"
          - "connector-pcb"
    env:
      PRODUCT: ${{ matrix.product }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate schematic document
      working-directory: hardware
      run: ./scripts/export_schematic.sh

    - name: Generate layout document
      working-directory: hardware
      run: ./scripts/export_layout.sh

    - name: Generate STEP file
      working-directory: hardware
      run: ./scripts/export_step.sh

    - name: Generate Gerbers
      working-directory: hardware
      run: ./scripts/export_gerbers.sh

    - name: Archive Output
      uses: actions/upload-artifact@v4
      with:
        name: hardware-${{ matrix.product }}
        path: hardware/build/
        if-no-files-found: error
        retention-days: 5

  panelize-optical-sensor:
    name: Panelize (Optical Sensor)
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad7_auto:1.6.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Panelize
        working-directory: hardware
        run: |
          kikit panelize -p design/optical-sensor/panel.json design/optical-sensor/optical-sensor.kicad_pcb optical-sensor-panelized.kicad_pcb

      - name: Generate Gerbers
        working-directory: hardware
        run: kibot -b optical-sensor-panelized.kicad_pcb -c config/outputs.yaml gerbers drill

      - name: Archive Output
        uses: actions/upload-artifact@v4
        with:
          name: panelized-board
          path: |
            hardware/build
            hardware/optical-sensor-panelized.kicad_pcb
          if-no-files-found: error
          retention-days: 5
